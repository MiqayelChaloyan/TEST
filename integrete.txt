Variant 1

.custom-try-on-button {
  white-space: pre-wrap; 
  background: black; 
  border: none;
  color: white; 
  width: 100%; 
  cursor: pointer; 
  height: 60px; 
  display: flex; 
  justify-content: center; 
  align-items: center; 
  border-radius: 10px; 
  font-size: 17px; 
  font-weight: 500; 
  margin-top: 10px;
}


<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Get the article element with the class ProductItem
    const articleElement = document.querySelector('article.ProductItem');

    if (articleElement) {
      // Retrieve the data-item-id from the article element
      const itemId = articleElement.getAttribute('data-item-id');

      // Get the button wrapper
      const buttonWrapper = document.querySelector('.sqs-add-to-cart-button-wrapper');

      if (buttonWrapper) {
        // Create a new button element
        const customButton = document.createElement('button');

        // Add custom class and styles
        customButton.classList.add('custom-try-on-button');

        // Set custom text
        customButton.textContent = "Try On";

        // Add the data-item-id as an attribute to the button
        if (itemId) {
          customButton.setAttribute('data-item-id', itemId);
        }

        // Add click logic
        customButton.addEventListener('click', function () {
          alert(`Custom button clicked! Data Item ID from article: ${itemId || 'Not Found'}`);
          // Add additional custom actions here
        });

        // Append the button as a child to the wrapper
        buttonWrapper.appendChild(customButton);
      }
    }
  });
</script>






Variant 2

/* Style for the custom modal */
.custom-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

/* Modal content styling */
.modal-content {
  background: white;
  padding: 20px;
  border-radius: 8px;
  position: relative;
  max-width: 90%;
  max-height: 90%;
  overflow: hidden;
}

/* Close button styling */
.close-modal {
  padding: 10px 20px;
  background-color: #f44336;
  color: white;
  border: none;
  cursor: pointer;
  position: absolute;
  top: 10px;
  right: 10px;
  border-radius: 5px;
}

/* Close button hover effect */
.close-modal:hover {
  background-color: #d32f2f;
}

/* Iframe styling */
iframe {
  width: 100%;
  height: 400px;
  border: none;
}


<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Get the article element with the class ProductItem
    const articleElement = document.querySelector('article.ProductItem');

    if (articleElement) {
      // Retrieve the data-item-id from the article element
      const itemId = articleElement.getAttribute('data-item-id');

      // Get the button wrapper
      const buttonWrapper = document.querySelector('.sqs-add-to-cart-button-wrapper');

      if (buttonWrapper) {
        // Create a new button element
        const customButton = document.createElement('button');

        // Add custom class and styles
        customButton.classList.add('custom-try-on-button');

        // Set custom text
        customButton.textContent = "Try On";

        // Add the data-item-id as an attribute to the button
        if (itemId) {
          customButton.setAttribute('data-item-id', itemId);
        }

        // Add click logic
        customButton.addEventListener('click', function () {
          openTryOnModal(itemId);
        });

        // Append the button as a child to the wrapper
        buttonWrapper.appendChild(customButton);
      }
    }
  });

  // Function to open a modal with an iframe
  function openTryOnModal(itemId) {
    // Create the modal container
    const modal = document.createElement('div');
    modal.classList.add('custom-modal');
    
    // Create iframe element
    const iframe = document.createElement('iframe');
    iframe.src = `https://style.clo-set.com/embed/2b0aae6007514254a9cca9f34296180b/1/c/0?bgColor=%23f5f5f5&ui=0&colorway=0&logo=none`; // Replace with the desired link structure
    iframe.width = "800";  // Set desired iframe width
    iframe.height = "600"; // Set desired iframe height
    iframe.frameBorder = "0"; // Remove iframe border
    iframe.allowFullscreen = true; // Allow fullscreen for the iframe

    // Create modal content and append iframe
    const modalContent = document.createElement('div');
    modalContent.classList.add('modal-content');
    modalContent.appendChild(iframe);

    // Create and append the close button
    const closeButton = document.createElement('button');
    closeButton.textContent = "x";
    closeButton.classList.add('close-modal');
    closeButton.addEventListener('click', function () {
      modal.remove();
    });

    modalContent.appendChild(closeButton);
    modal.appendChild(modalContent);

    // Append the modal to the body
    document.body.appendChild(modal);
  }
</script>
